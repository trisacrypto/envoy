{
  "info": {
    "title": "TRISA Envoy API",
    "description": "The TRISA Envoy API allows users to interact with their TRISA open source Envoy node in a programmatic fashion. The API allows users to manage server objects such as accounts and counterparties and to send and manage Travel Rule transactions without having to know the details of the TRISA or TRP protocols.",
    "contact": {
      "name": "Rotational Labs",
      "email": "support@rotational.io",
      "url": "https://rotational.io"
    },
    "license": {
      "name": "MIT Licensed",
      "url": "https://github.com/trisacrypto/envoy/blob/main/LICENSE"
    },
    "version": "v{{ .Version }}"
  },
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "{{ .Origin }}",
      "variables": {},
      "description": "{{ .Description }}"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "API authentication is handled using JWT access and refresh tokens that can be obtained with an API key composed of a client ID and secret."
    },
    {
      "name": "Accounts",
      "description": "Accounts store information about your users and their crypto wallets for compliance purposes."
    },
    {
      "name": "Crypto Addresses",
      "description": "A resource nested under accounts for tracking which wallet addresses for which blockchain networks belong to accounts."
    }
  ],
  "externalDocs": {
    "description": "TRISA Documentation",
    "url": "https://trisa.dev"
  },
  "security": [
    {},
    {
      "permissions": [
        "users:manage",
        "users:view",
        "apikeys:manage",
        "apikeys:view",
        "apikeys:revoke",
        "counterparties:manage",
        "counterparties:view",
        "accounts:manage",
        "accounts:view",
        "travelrule:manage",
        "travelrule:delete",
        "travelrule:view",
        "config:manage",
        "config:view",
        "pki:manage",
        "pki:delete",
        "pki:view"
      ]
    }
  ],
  "components": {
    "schemas": {
      "Reply": {
        "type": "object",
        "description": "A standard reply object that is used to indicate success with a JSON body if required.",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Set to true if the request was successful, false if there was an error.",
            "example": true
          }
        },
        "example": {
          "success": true
        }
      },
      "ErrorReply": {
        "type": "object",
        "description": "A general error reply that includes the details of why the request was bad.",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Set to true if the request was successful, false if there was an error (see reply).",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "A short description of the error intended to help the user fix the request and retry.",
            "example": "resource not found"
          }
        },
        "example": {
          "success": false,
          "error": "resource not found"
        }
      },
      "FieldErrors": {
        "type": "object",
        "description": "A set of errors used to indicate problems with specific fields in the request body.",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Set to true if the request was successful, false if there was an error (see error reply).",
            "example": false
          },
          "errors": {
            "type": "array",
            "description": "A list of the fields and their associated errors.",
            "items": {
              "type": "object",
              "description": "An individual field error that specifies the name of the field and the validation error.",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "The name of the field in the request body (may be \".\" delimited to indicate nested fields).",
                  "example": "country"
                },
                "error": {
                  "type": "string",
                  "description": "A brief description of the validation error that occurred.",
                  "example": "not a valid ISO-3166-1 Alpha 2 country code"
                }
              },
              "example": {
                "field": "country",
                "error": "not a valid ISO-3166-1 Alpha 2 country code"
              }
            },
            "example": [
              {
                "field": "common_name",
                "error": "common name must be a valid domain name with a correct tld"
              },
              {
                "field": "country",
                "error": "not a valid ISO-3166-1 Alpha 2 country code"
              }
            ]
          }
        },
        "example": {
          "success": false,
          "errors": [
            {
              "field": "common_name",
              "error": "common name must be a valid domain name with a correct tld"
            },
            {
              "field": "country",
              "error": "not a valid ISO-3166-1 Alpha 2 country code"
            }
          ]
        }
      },
      "PageInfo": {
        "type": "object",
        "description": "The page info for the current page of a paginated list resource.",
        "properties": {
          "page_size": {
            "type": "integer",
            "example": 50,
            "description": "The number of items on the current page, defaults to the page size requested in the page query."
          },
          "next_page_token": {
            "type": "string",
            "format": "base64",
            "description": "An encrypted handle that can be used in a page query to return the next page of results after this current page.",
            "example": "eyJjIjogIjAxSjZESjlGNjkxQ0Y4RTlIMFYzRVQwTTBFIiwgInMiOiA1MCwgImUiOiAxNzI0ODgyOTU4fQ=="
          },
          "prev_page_token": {
            "type": "string",
            "format": "base64",
            "description": "An encrypted handle that can be used in a page query to return the previous page of results after this current page.",
            "example": "eyJjIjogIjAxSjZESjlGNjkxQ0Y4RTlIMFYzRVQwTTBFIiwgInMiOiA1MCwgImUiOiAxNzI0ODgyOTU4fQ=="
          }
        },
        "example": {
          "page_size": 50,
          "next_page_token": "eyJjIjogIjAxSjZESjlGNjkxQ0Y4RTlIMFYzRVQwTTBFIiwgInMiOiA1MCwgImUiOiAxNzI0ODgyOTU4fQ=="
        }
      },
      "APIAuthentication": {
        "type": "object",
        "description": "Authenticate an API Key using its client ID and secret to receive a JWT bearer token.",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The client ID of the API Key for authentication.",
            "example": "kbxiRmtYvLbkYKrlefJoSP"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret of the API Key for authentication.",
            "example": "R4OTqjvlGj02x4PvoPe6bxTopFjQ15QrISG8X3HqD5isWIng"
          }
        },
        "required": [
          "client_id",
          "client_secret"
        ],
        "example": {
          "client_id": "kbxiRmtYvLbkYKrlefJoSP",
          "client_secret": "R4OTqjvlGj02x4PvoPe6bxTopFjQ15QrISG8X3HqD5isWIng"
        }
      },
      "LoginReply": {
        "type": "object",
        "description": "Returns two JWT tokens. The access token should be used as a Bearer token in the Authorization header. The refresh token can be used to obtain a new access token when it expires to reauthenticate without having to post the client ID and secret again.",
        "properties": {
          "access_token": {
            "type": "string",
            "format": "JWT",
            "description": "The access token with API key claims that should be used as the Bearer token in the Authorization header.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIl0sImV4cCI6MTcyNDg4NjU1OCwibmJmIjoxNzI0ODgyOTU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3IiwiY2xpZW50SUQiOiJrYnhpUm10WXZMYmtZS3JsZWZKb1NQIiwicGVybWlzc2lvbnMiOlsidXNlcnM6bWFuYWdlIiwidXNlcnM6dmlldyIsImFwaWtleXM6bWFuYWdlIiwiYXBpa2V5czp2aWV3IiwiYXBpa2V5czpyZXZva2UiLCJjb3VudGVycGFydGllczptYW5hZ2UiLCJjb3VudGVycGFydGllczp2aWV3IiwiYWNjb3VudHM6bWFuYWdlIiwiYWNjb3VudHM6dmlldyIsInRyYXZlbHJ1bGU6bWFuYWdlIiwidHJhdmVscnVsZTpkZWxldGUiLCJ0cmF2ZWxydWxlOnZpZXciLCJjb25maWc6bWFuYWdlIiwiY29uZmlnOnZpZXciLCJwa2k6bWFuYWdlIiwicGtpOmRlbGV0ZSIsInBraTp2aWV3Il19.vZeoZ6UR9e2qOU2Zd64nlnPne4Hbm3t8QtX_uM72pyf8BRIEehruioQCQ8RfqNJpSyacRCfhAKovTKChnWIPd8Xdkzcl9_bHnhYKlTzhdPYlD5K1uCNkNSJHZVwEJeG3aHB7xE-MVrvXivia3xHfth_ZSQab3jVuL6q_fjG4yPNpf3yjXbO3OPaGpavcElMf2r-DdIMIIewCmNktjrkFNtiNPmJU3MzLzwxLQPm2WUkcKZ27e7KD_LL2ZgluyVSM0BRehcdkPXmOXGF5KCTvHu7Xo5evUg6DvftEIz5IjCd-6s1YkZEJSQqBlfymhXXsmW1tlK4RYhay10Lg_k16HtO-kByLB2vtW6V1090XBK6tvjAJNjSGrD2tTFWbRlEe2YdYQ3pQilnSeJW1hBSpSYb_Ty94FwcsMrq_NiULYmxh6dOYtzrANou0EKd0HoYjw4d0dQOlCqSBfFclOoMmftjms5QG6E93s_Bjp2nhpKs6fr7TQhwmVChiVWBV2eq5s1mTLngNQhgLdNddcDJ_DJiisSv_V3nD-2uLcQaq9ZQ60oW1jQzUoTaJY9uw3SEToUa7bGRNKmHnUYYxRxqyVVYceaOlklPqfyT58zEBKqblhZfAE39rtyVZKOCc3x_d9yyQ9YaV6ijpaxC0PKTW0tSEWzNesNv4wayH-pNaSJM"
          },
          "refresh_token": {
            "type": "string",
            "format": "JWT",
            "description": "The refresh token can be used to re-authenticate an expired access token, so long as the refresh token is still valid.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
          }
        },
        "example": {
          "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIl0sImV4cCI6MTcyNDg4NjU1OCwibmJmIjoxNzI0ODgyOTU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3IiwiY2xpZW50SUQiOiJrYnhpUm10WXZMYmtZS3JsZWZKb1NQIiwicGVybWlzc2lvbnMiOlsidXNlcnM6bWFuYWdlIiwidXNlcnM6dmlldyIsImFwaWtleXM6bWFuYWdlIiwiYXBpa2V5czp2aWV3IiwiYXBpa2V5czpyZXZva2UiLCJjb3VudGVycGFydGllczptYW5hZ2UiLCJjb3VudGVycGFydGllczp2aWV3IiwiYWNjb3VudHM6bWFuYWdlIiwiYWNjb3VudHM6dmlldyIsInRyYXZlbHJ1bGU6bWFuYWdlIiwidHJhdmVscnVsZTpkZWxldGUiLCJ0cmF2ZWxydWxlOnZpZXciLCJjb25maWc6bWFuYWdlIiwiY29uZmlnOnZpZXciLCJwa2k6bWFuYWdlIiwicGtpOmRlbGV0ZSIsInBraTp2aWV3Il19.vZeoZ6UR9e2qOU2Zd64nlnPne4Hbm3t8QtX_uM72pyf8BRIEehruioQCQ8RfqNJpSyacRCfhAKovTKChnWIPd8Xdkzcl9_bHnhYKlTzhdPYlD5K1uCNkNSJHZVwEJeG3aHB7xE-MVrvXivia3xHfth_ZSQab3jVuL6q_fjG4yPNpf3yjXbO3OPaGpavcElMf2r-DdIMIIewCmNktjrkFNtiNPmJU3MzLzwxLQPm2WUkcKZ27e7KD_LL2ZgluyVSM0BRehcdkPXmOXGF5KCTvHu7Xo5evUg6DvftEIz5IjCd-6s1YkZEJSQqBlfymhXXsmW1tlK4RYhay10Lg_k16HtO-kByLB2vtW6V1090XBK6tvjAJNjSGrD2tTFWbRlEe2YdYQ3pQilnSeJW1hBSpSYb_Ty94FwcsMrq_NiULYmxh6dOYtzrANou0EKd0HoYjw4d0dQOlCqSBfFclOoMmftjms5QG6E93s_Bjp2nhpKs6fr7TQhwmVChiVWBV2eq5s1mTLngNQhgLdNddcDJ_DJiisSv_V3nD-2uLcQaq9ZQ60oW1jQzUoTaJY9uw3SEToUa7bGRNKmHnUYYxRxqyVVYceaOlklPqfyT58zEBKqblhZfAE39rtyVZKOCc3x_d9yyQ9YaV6ijpaxC0PKTW0tSEWzNesNv4wayH-pNaSJM",
          "refresh_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
        }
      },
      "ReauthenticateRequest": {
        "type": "object",
        "description": "Reauthenticate an expired `access_token` to receive a new access token without having to authenticate with your API key credentials.",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "The JWT refresh token for re-authentication",
            "format": "JWT",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
          }
        },
        "required": [
          "refresh_token"
        ],
        "example": {
          "refresh_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
        }
      },
      "Account": {
        "type": "object",
        "description": "An account of a customer whose identity information is required for compliance. Accounts are also associated with crypto wallet addresses.",
        "properties": {
          "id": {
            "type": "string",
            "format": "ULID",
            "description": "The unique identifier of the account on your Envoy node.",
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          },
          "customer_id": {
            "type": "string",
            "description": "An internal customer ID associated with the account that links it to your customer management system.",
            "example": "674907513"
          },
          "first_name": {
            "type": "string",
            "description": "The first or \"secondary\" name of the customer account.",
            "example": "James"
          },
          "last_name": {
            "type": "string",
            "description": "The last or \"primary\" name of the customer account, often a family name. This name is used to sort accounts.",
            "example": "Bond"
          },
          "ivms101": {
            "type": "string",
            "format": "base64",
            "description": "The base64 encoded representation of a JSON or protocol buffer IVMS101 record for the natural person on the account.",
            "example": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I"
          },
          "travel_address": {
            "type": "string",
            "format": "TravelAddress",
            "description": "The customer account travel address that allows counterparties to send this account travel rule inquiries.",
            "example": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv"
          },
          "crypto_addresses": {
            "type": "array",
            "description": "A list of crypto addresses associated with the account.",
            "items": {
              "$ref": "#/components/schemas/CryptoAddress"
            },
            "example": []
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the account record was created.",
            "example": "2024-08-28T10:14:43-05:00"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the account record was last modified.",
            "example": "2024-08-28T12:23:24-05:00"
          }
        },
        "example": {
          "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
          "customer_id": "674907513",
          "first_name": "James",
          "last_name": "Bond",
          "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
          "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I",
          "crypto_addresses": [
            {
              "id": "01J6FRB1EGJCEZXRMQGW1FM0BR",
              "crypto_address": "0x9268102451DE47C536C3AD92203D4E9692941E06",
              "network": "ETH",
              "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5XP69YEctxHMPwa7YTEU3QjKcC2RY9Jqjd4VsCsj396YMZvVCfFaYjDR7P",
              "created": "2024-08-29T14:05:31-05:00",
              "modified": "2024-08-30T18:39:02-05:00"
            },
            {
              "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
              "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
              "network": "BTC",
              "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
              "created": "2024-08-28T10:14:43-05:00",
              "modified": "2024-08-28T12:23:24-05:00"
            }
          ],
          "created": "2024-08-28T10:14:43-05:00",
          "modified": "2024-08-28T12:23:24-05:00"
        }
      },
      "AccountForm": {
        "type": "object",
        "description": "A representation of the customer Account object that defines the editable fields.",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "The internal customer ID can be changed at any time, thought it is not recommended.",
            "example": "674907513"
          },
          "first_name": {
            "type": "string",
            "description": "The first or \"secondary\" name of the customer account can be modified.",
            "example": "James"
          },
          "last_name": {
            "type": "string",
            "description": "The last or \"primary\" name of the customer account, often a family name, can be modified.",
            "example": "Bond"
          },
          "ivms101": {
            "type": "string",
            "format": "base64",
            "description": "The base64 encoded representation of a JSON or protocol buffer IVMS101 record for the natural person on the account can be modified but must be parseable.",
            "example": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I"
          }
        },
        "example": {
          "customer_id": "674907513",
          "first_name": "James",
          "last_name": "Bond",
          "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I"
        }
      },
      "AccountSummary": {
        "type": "object",
        "description": "A summary of customer account details that is used in account lists to minimize data transfer.",
        "properties": {
          "id": {
            "type": "string",
            "format": "ULID",
            "description": "The unique identifier of the account on your Envoy node - used to construct the detail URL.",
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          },
          "customer_id": {
            "type": "string",
            "description": "An internal customer ID associated with the account to reference in your customer management system.",
            "example": "674907513"
          },
          "first_name": {
            "type": "string",
            "description": "The first or \"secondary\" name of the natural person associated with the customer account.",
            "example": "James"
          },
          "last_name": {
            "type": "string",
            "description": "The last or \"primary\" name of the natural person assoociated customer account. This name is used to sort accounts.",
            "example": "Bond"
          },
          "travel_address": {
            "type": "string",
            "format": "TravelAddress",
            "description": "A travel address that the customer can send to request payment using virtual assets.",
            "example": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the account record was created in the database.",
            "example": "2024-08-28T10:14:43-05:00"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the account record was last modified in the database.",
            "example": "2024-08-28T12:23:24-05:00"
          }
        },
        "example": {
          "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
          "customer_id": "674907513",
          "first_name": "James",
          "last_name": "Bond",
          "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
          "created": "2024-08-28T10:14:43-05:00",
          "modified": "2024-08-28T12:23:24-05:00"
        }
      },
      "AccountList": {
        "type": "object",
        "description": "A list of Account objects, returned in a paginated fashion.",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountSummary"
            },
            "example": [
              {
                "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                "customer_id": "674907513",
                "first_name": "James",
                "last_name": "Bond",
                "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
                "created": "2024-08-28T10:14:43-05:00",
                "modified": "2024-08-28T12:23:24-05:00"
              },
              {
                "id": "01J6FRR2NSTQ0TC7DDMAR91MG7",
                "customer_id": "39910432",
                "first_name": "Twilda",
                "last_name": "Swansong",
                "travel_address": "taLg4sBFp3cWhB9wN7qsiUF8pxo7JXtVShYkv5ix1wG2kX5y4pRiJ3TRHmeD8H67TLLm5wHyDktVw1onfDeQfESumf91mjRTMbi",
                "created": "2024-08-29T14:09:21-05:00",
                "modified": "2024-08-29T14:10:50-05:00"
              }
            ]
          }
        },
        "example": {
          "page": {
            "page_size": 50
          },
          "accounts": [
            {
              "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
              "customer_id": "674907513",
              "first_name": "James",
              "last_name": "Bond",
              "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
              "created": "2024-08-28T10:14:43-05:00",
              "modified": "2024-08-28T12:23:24-05:00"
            },
            {
              "id": "01J6FRR2NSTQ0TC7DDMAR91MG7",
              "customer_id": "39910432",
              "first_name": "Twilda",
              "last_name": "Swansong",
              "travel_address": "taLg4sBFp3cWhB9wN7qsiUF8pxo7JXtVShYkv5ix1wG2kX5y4pRiJ3TRHmeD8H67TLLm5wHyDktVw1onfDeQfESumf91mjRTMbi",
              "created": "2024-08-29T14:09:21-05:00",
              "modified": "2024-08-29T14:10:50-05:00"
            }
          ]
        }
      },
      "CryptoAddress": {
        "type": "object",
        "description": "A record of a crypto wallet address and the blockchain network that wallet belongs to.",
        "properties": {
          "id": {
            "type": "string",
            "format": "ULID",
            "description": "The unique identifier of the crypto address on your Envoy node.",
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          },
          "crypto_address": {
            "type": "string",
            "description": "The crypto or wallet address for the blockchain network.",
            "example": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i"
          },
          "network": {
            "type": "string",
            "description": "The network the crypto wallet address belongs to in SLIP-0044 three-character encoding.",
            "example": "BTC"
          },
          "asset_type": {
            "type": "string",
            "description": "If the network supports multiple asset types, the description of the asset type managed by the wallet.",
            "example": "BCH"
          },
          "tag": {
            "type": "string",
            "description": "The memo or destination tag associated with the crypto wallet address if required by the network.",
            "example": "dt=1234567890"
          },
          "travel_address": {
            "type": "string",
            "format": "TravelAddress",
            "description": "The wallet specific travel address that allows counterparties to send travel rule inquiries associated with the wallet.",
            "example": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the crypto address record was created.",
            "example": "2024-08-28T10:14:43-05:00"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the crypto address record was last modified.",
            "example": "2024-08-28T12:23:24-05:00"
          }
        },
        "example": {
          "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
          "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
          "network": "BTC",
          "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
          "created": "2024-08-28T10:14:43-05:00",
          "modified": "2024-08-28T12:23:24-05:00"
        }
      },
      "CryptoAddressList": {
        "type": "object",
        "description": "A list of CryptoAddress objects, returned in a paginated fashion.",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "crypto_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoAddress"
            },
            "example": [
              {
                "id": "01J6FRB1EGJCEZXRMQGW1FM0BR",
                "crypto_address": "0x9268102451DE47C536C3AD92203D4E9692941E06",
                "network": "ETH",
                "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5XP69YEctxHMPwa7YTEU3QjKcC2RY9Jqjd4VsCsj396YMZvVCfFaYjDR7P",
                "created": "2024-08-29T14:05:31-05:00",
                "modified": "2024-08-30T18:39:02-05:00"
              },
              {
                "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
                "network": "BTC",
                "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
                "created": "2024-08-28T10:14:43-05:00",
                "modified": "2024-08-28T12:23:24-05:00"
              }
            ]
          }
        },
        "example": {
          "page": {
            "page_size": 50
          },
          "crypto_addresses": [
            {
              "id": "01J6FRB1EGJCEZXRMQGW1FM0BR",
              "crypto_address": "0x9268102451DE47C536C3AD92203D4E9692941E06",
              "network": "ETH",
              "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5XP69YEctxHMPwa7YTEU3QjKcC2RY9Jqjd4VsCsj396YMZvVCfFaYjDR7P",
              "created": "2024-08-29T14:05:31-05:00",
              "modified": "2024-08-30T18:39:02-05:00"
            },
            {
              "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
              "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
              "network": "BTC",
              "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
              "created": "2024-08-28T10:14:43-05:00",
              "modified": "2024-08-28T12:23:24-05:00"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Some Description"
      }
    },
    "parameters": {
      "page_size": {
        "name": "page_size",
        "in": "query",
        "description": "Specify the page size for a paginated list request, e.g. the number of records to return in a single request.",
        "schema": {
          "type": "integer"
        },
        "example": 50
      },
      "next_page_token": {
        "name": "next_page_token",
        "in": "query",
        "description": "Used to specify the next page in a series of paginated list requests. Page tokens expire, so make sure to use them in a sequence of requests to retrieve a large list.",
        "schema": {
          "type": "string",
          "format": "base64"
        },
        "example": "eyJjIjogIjAxSjZESjlGNjkxQ0Y4RTlIMFYzRVQwTTBFIiwgInMiOiA1MCwgImUiOiAxNzI0ODgyOTU4fQ=="
      },
      "prev_page_token": {
        "name": "prev_page_token",
        "in": "query",
        "description": "Used to specify the previous page in a series of paginated list requests. Although reverse iteration is not necessarily supported, this token can allow refresh of a previous page fetched during paginated iteration.",
        "schema": {
          "type": "string",
          "format": "base64"
        },
        "example": "eyJjIjogIjAxSjZESjlGNjkxQ0Y4RTlIMFYzRVQwTTBFIiwgInMiOiA1MCwgImUiOiAxNzI0ODgyOTU4fQ=="
      }
    }
  },
  "paths": {
    "/v1/authenticate": {
      "post": {
        "summary": "Authenticate",
        "description": "Authenticate your client with your API Key and receive a JWT claims package that can be used as a Bearer token to authenticate future requests.",
        "operationId": "authenticate",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "An API authentication JSON payload with the API key client id and secret.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIAuthentication"
              },
              "example": {
                "client_id": "kbxiRmtYvLbkYKrlefJoSP",
                "client_secret": "R4OTqjvlGj02x4PvoPe6bxTopFjQ15QrISG8X3HqD5isWIng"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginReply"
                },
                "example": {
                  "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIl0sImV4cCI6MTcyNDg4NjU1OCwibmJmIjoxNzI0ODgyOTU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3IiwiY2xpZW50SUQiOiJrYnhpUm10WXZMYmtZS3JsZWZKb1NQIiwicGVybWlzc2lvbnMiOlsidXNlcnM6bWFuYWdlIiwidXNlcnM6dmlldyIsImFwaWtleXM6bWFuYWdlIiwiYXBpa2V5czp2aWV3IiwiYXBpa2V5czpyZXZva2UiLCJjb3VudGVycGFydGllczptYW5hZ2UiLCJjb3VudGVycGFydGllczp2aWV3IiwiYWNjb3VudHM6bWFuYWdlIiwiYWNjb3VudHM6dmlldyIsInRyYXZlbHJ1bGU6bWFuYWdlIiwidHJhdmVscnVsZTpkZWxldGUiLCJ0cmF2ZWxydWxlOnZpZXciLCJjb25maWc6bWFuYWdlIiwiY29uZmlnOnZpZXciLCJwa2k6bWFuYWdlIiwicGtpOmRlbGV0ZSIsInBraTp2aWV3Il19.vZeoZ6UR9e2qOU2Zd64nlnPne4Hbm3t8QtX_uM72pyf8BRIEehruioQCQ8RfqNJpSyacRCfhAKovTKChnWIPd8Xdkzcl9_bHnhYKlTzhdPYlD5K1uCNkNSJHZVwEJeG3aHB7xE-MVrvXivia3xHfth_ZSQab3jVuL6q_fjG4yPNpf3yjXbO3OPaGpavcElMf2r-DdIMIIewCmNktjrkFNtiNPmJU3MzLzwxLQPm2WUkcKZ27e7KD_LL2ZgluyVSM0BRehcdkPXmOXGF5KCTvHu7Xo5evUg6DvftEIz5IjCd-6s1YkZEJSQqBlfymhXXsmW1tlK4RYhay10Lg_k16HtO-kByLB2vtW6V1090XBK6tvjAJNjSGrD2tTFWbRlEe2YdYQ3pQilnSeJW1hBSpSYb_Ty94FwcsMrq_NiULYmxh6dOYtzrANou0EKd0HoYjw4d0dQOlCqSBfFclOoMmftjms5QG6E93s_Bjp2nhpKs6fr7TQhwmVChiVWBV2eq5s1mTLngNQhgLdNddcDJ_DJiisSv_V3nD-2uLcQaq9ZQ60oW1jQzUoTaJY9uw3SEToUa7bGRNKmHnUYYxRxqyVVYceaOlklPqfyT58zEBKqblhZfAE39rtyVZKOCc3x_d9yyQ9YaV6ijpaxC0PKTW0tSEWzNesNv4wayH-pNaSJM",
                  "refresh_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldErrors"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "field": "client_id",
                      "error": "missing client_id: this field is required"
                    },
                    {
                      "field": "client_secret",
                      "error": "missing client_secret: this field is required"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Invalid API Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "invalid api credentials"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reauthenticate": {
      "post": {
        "summary": "Reauthenticate",
        "description": "The JWT `access_token` will eventually expire and can no longer be used to authenticate requests. The `refresh_token` can be used to reauthenticate your client without having to post the client ID and secret again. Note that reauthenticate will only work after the refresh token's `nbf` (not before) claim and before the tokens' `exp` (expires) claim.",
        "operationId": "reauthenticate",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "description": "A JSON payload with the refresh token as the primary element.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReauthenticateRequest"
              },
              "example": {
                "refresh_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reauthentication Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginReply"
                },
                "example": {
                  "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIl0sImV4cCI6MTcyNDg4NjU1OCwibmJmIjoxNzI0ODgyOTU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3IiwiY2xpZW50SUQiOiJrYnhpUm10WXZMYmtZS3JsZWZKb1NQIiwicGVybWlzc2lvbnMiOlsidXNlcnM6bWFuYWdlIiwidXNlcnM6dmlldyIsImFwaWtleXM6bWFuYWdlIiwiYXBpa2V5czp2aWV3IiwiYXBpa2V5czpyZXZva2UiLCJjb3VudGVycGFydGllczptYW5hZ2UiLCJjb3VudGVycGFydGllczp2aWV3IiwiYWNjb3VudHM6bWFuYWdlIiwiYWNjb3VudHM6dmlldyIsInRyYXZlbHJ1bGU6bWFuYWdlIiwidHJhdmVscnVsZTpkZWxldGUiLCJ0cmF2ZWxydWxlOnZpZXciLCJjb25maWc6bWFuYWdlIiwiY29uZmlnOnZpZXciLCJwa2k6bWFuYWdlIiwicGtpOmRlbGV0ZSIsInBraTp2aWV3Il19.vZeoZ6UR9e2qOU2Zd64nlnPne4Hbm3t8QtX_uM72pyf8BRIEehruioQCQ8RfqNJpSyacRCfhAKovTKChnWIPd8Xdkzcl9_bHnhYKlTzhdPYlD5K1uCNkNSJHZVwEJeG3aHB7xE-MVrvXivia3xHfth_ZSQab3jVuL6q_fjG4yPNpf3yjXbO3OPaGpavcElMf2r-DdIMIIewCmNktjrkFNtiNPmJU3MzLzwxLQPm2WUkcKZ27e7KD_LL2ZgluyVSM0BRehcdkPXmOXGF5KCTvHu7Xo5evUg6DvftEIz5IjCd-6s1YkZEJSQqBlfymhXXsmW1tlK4RYhay10Lg_k16HtO-kByLB2vtW6V1090XBK6tvjAJNjSGrD2tTFWbRlEe2YdYQ3pQilnSeJW1hBSpSYb_Ty94FwcsMrq_NiULYmxh6dOYtzrANou0EKd0HoYjw4d0dQOlCqSBfFclOoMmftjms5QG6E93s_Bjp2nhpKs6fr7TQhwmVChiVWBV2eq5s1mTLngNQhgLdNddcDJ_DJiisSv_V3nD-2uLcQaq9ZQ60oW1jQzUoTaJY9uw3SEToUa7bGRNKmHnUYYxRxqyVVYceaOlklPqfyT58zEBKqblhZfAE39rtyVZKOCc3x_d9yyQ9YaV6ijpaxC0PKTW0tSEWzNesNv4wayH-pNaSJM",
                  "refresh_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjAxSFZINTBWWEs5MFJKWlI5WENNMENCRkJRIiwidHlwIjoiSldUIn0.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAiLCJzdWIiOiJrMDFKNVkyUjBZQUZFU0ZUVzYzU1JTNTg4WjIiLCJhdWQiOlsiaHR0cDovL2xvY2FsaG9zdDo4MDAwIiwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3YxL3JlYXV0aGVudGljYXRlIl0sImV4cCI6MTcyNDg5MDE1OCwibmJmIjoxNzI0ODg1NjU4LCJpYXQiOjE3MjQ4ODI5NTgsImp0aSI6IjAxSjZER0pFMFExMEcwQzY1U1NEUlQ3VDY3In0.Mzey5MWS-GRVhVAfISXH6keebNpoQTYWUVDhOnD-mENfWNurtkBpWMgV_FivpAHyXlH72Mv-cC0oaaUMYNMVRg5yCN6XQyYdUqcZsynULLkUUPcD7PGJLDIMe8CngAHITDmDRzdZaUpbWB4F-Ad_qEqzGhz3-PRAQxM7-Gt3IFNFVfWHJXTZzAiKHP_xtE4rnVczUx2sMXKPQHhxDVTiahMSAGiMVUWvnfKzwtv36U69cmfOw3UbG2IVZ6-2zm8ICSNesUqtwpjn1c5B_pYoqJNJYbp8jCzjRS2xT4xT7eDmMAjeFIiJEe6wuTvzU3ZwwqsXhLPtj27VNwHNHHL2qqnn0wTLx30amHkrBoEU44Rbf9Lxof6y_WDhZJIt7SeG1bDZ378falQd0v5yTColbaTk20jlADsoSdm8IgYoH91k1_-bzfHQkRTNUQI7YxCQWeP9zj-QzKdA7c86gyvYuPbsk29St0tGvQdS-aWa5ZLpDL3R5OLzO9zhqgNeGQVomF5YJaFAaBe4Y_6dyvNmHJB9cdfgEgj6B9cTzKdZWfn-r48E3xt0n41FdvYKgyDjR1gRBe7T-f55GbH5N0fR2Twdclc4DqD5c2gp5U0BTK-Uc2OBdT710Ws6mqdVljKoaG6VZjI-eA17pv7Khzdr8NWpmSUMYUGbAKtHFA7atsc"
                }
              }
            }
          },
          "400": {
            "description": "Bad Reauthentication Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldErrors"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "field": "refresh_token",
                      "error": "missing refresh_token: this field is required"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Invalid Refresh Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "invalid reauthentication credentials"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts": {
      "get": {
        "summary": "List Accounts",
        "description": "Return a paginated list of customer accounts stored on the Envoy node.",
        "operationId": "listAccounts",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "permissions": [
              "accounts:view"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/next_page_token"
          },
          {
            "$ref": "#/components/parameters/prev_page_token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Account Page Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountList"
                },
                "example": {
                  "page": {
                    "page_size": 50
                  },
                  "accounts": [
                    {
                      "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                      "customer_id": "674907513",
                      "first_name": "James",
                      "last_name": "Bond",
                      "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
                      "created": "2024-08-28T10:14:43-05:00",
                      "modified": "2024-08-28T12:23:24-05:00"
                    },
                    {
                      "id": "01J6FRR2NSTQ0TC7DDMAR91MG7",
                      "customer_id": "39910432",
                      "first_name": "Twilda",
                      "last_name": "Swansong",
                      "travel_address": "taLg4sBFp3cWhB9wN7qsiUF8pxo7JXtVShYkv5ix1wG2kX5y4pRiJ3TRHmeD8H67TLLm5wHyDktVw1onfDeQfESumf91mjRTMbi",
                      "created": "2024-08-29T14:09:21-05:00",
                      "modified": "2024-08-29T14:10:50-05:00"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Accounts Page Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "could not parse page query request"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to View Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "this endpoint requires authentication"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Account",
        "description": "Create a new customer account record.",
        "operationId": "createAccount",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "permissions": [
              "accounts:manage"
            ]
          }
        ],
        "requestBody": {
          "description": "Account information that includes all required writeable fields and no crypto addresses.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountForm"
              },
              "example": {
                "customer_id": "674907513",
                "first_name": "James",
                "last_name": "Bond",
                "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                },
                "example": {
                  "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                  "customer_id": "674907513",
                  "first_name": "James",
                  "last_name": "Bond",
                  "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
                  "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I",
                  "crypto_addresses": [],
                  "created": "2024-08-28T10:14:43-05:00",
                  "modified": "2024-08-28T12:23:24-05:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Create Account Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "could not parse account data"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to Manage Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "this endpoint requires authentication"
                }
              }
            }
          },
          "422": {
            "description": "Account Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldErrors"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "field": "id",
                      "error": "field id is a read only field"
                    },
                    {
                      "field": "travel_address",
                      "error": "field travel address is a read only field"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/{accountID}": {
      "get": {
        "summary": "Account Detail",
        "description": "Return a detailed record of a single customer account object.",
        "operationId": "accountDetail",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "permissions": [
              "accounts:view"
            ]
          }
        ],
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "description": "The ID of the account to fetch a detailed record of.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "UUID"
            },
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          }
        ],
        "responses": {
          "200": {
            "description": "Account Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                },
                "example": {
                  "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                  "customer_id": "674907513",
                  "first_name": "James",
                  "last_name": "Bond",
                  "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
                  "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I",
                  "crypto_addresses": [
                    {
                      "id": "01J6FRB1EGJCEZXRMQGW1FM0BR",
                      "crypto_address": "0x9268102451DE47C536C3AD92203D4E9692941E06",
                      "network": "ETH",
                      "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5XP69YEctxHMPwa7YTEU3QjKcC2RY9Jqjd4VsCsj396YMZvVCfFaYjDR7P",
                      "created": "2024-08-29T14:05:31-05:00",
                      "modified": "2024-08-30T18:39:02-05:00"
                    },
                    {
                      "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                      "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
                      "network": "BTC",
                      "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
                      "created": "2024-08-28T10:14:43-05:00",
                      "modified": "2024-08-28T12:23:24-05:00"
                    }
                  ],
                  "created": "2024-08-28T10:14:43-05:00",
                  "modified": "2024-08-28T12:23:24-05:00"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to View Account Detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "this endpoint requires authentication"
                }
              }
            }
          },
          "404": {
            "description": "Account Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "account not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Account",
        "description": "Update an account record with new information.",
        "operationId": "updateAccount",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "permissions": [
              "accounts:manage"
            ]
          }
        ],
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "description": "The ID of the account to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "UUID"
            },
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          }
        ],
        "requestBody": {
          "description": "A complete account record that should reflect the state of the account after the operation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountForm"
              },
              "example": {
                "customer_id": "674907513",
                "first_name": "James",
                "last_name": "Bond",
                "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Account Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                },
                "example": {
                  "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                  "customer_id": "674907513",
                  "first_name": "James",
                  "last_name": "Bond",
                  "travel_address": "taLg4sBFp3cWhB9wN7qqPwDzq32bWwhibhFvADbiYp5fMR7asAxbqNrPuUyT4VzZa98oPk6dHcdKhov9jiraNrcZ7yQdikXcwbv",
                  "ivms101": "CjwKEQoPCgRCb25kEgVKYW1lcxgCKiMKCjE5MjAtMTEtMTESFVdhdHRlbnNjaGVpZCwgR2VybWFueTICR0I",
                  "crypto_addresses": [
                    {
                      "id": "01J6FRB1EGJCEZXRMQGW1FM0BR",
                      "crypto_address": "0x9268102451DE47C536C3AD92203D4E9692941E06",
                      "network": "ETH",
                      "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5XP69YEctxHMPwa7YTEU3QjKcC2RY9Jqjd4VsCsj396YMZvVCfFaYjDR7P",
                      "created": "2024-08-29T14:05:31-05:00",
                      "modified": "2024-08-30T18:39:02-05:00"
                    },
                    {
                      "id": "01J6DJ9F691CF8E9H0V3ET0M0E",
                      "crypto_address": "mvr5YZBdAuV8sgexCHL4CRkbCvTV7odT1i",
                      "network": "BTC",
                      "travel_address": "ta5TXL58tSWo9eeNP1C4iSsybuX1KMeLiqeprHtF5WTaDe5fEN9vFTCtNxb2bv1HegpR8RcuV4EAhxtvKt8wfx4SnH414o6eWU",
                      "created": "2024-08-28T10:14:43-05:00",
                      "modified": "2024-08-28T12:23:24-05:00"
                    }
                  ],
                  "created": "2024-08-28T10:14:43-05:00",
                  "modified": "2024-08-28T12:23:24-05:00"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to Update Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "this endpoint requires authentication"
                }
              }
            }
          },
          "404": {
            "description": "Account Not Found (Cannot Update)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "account not found"
                }
              }
            }
          },
          "422": {
            "description": "Account Update Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldErrors"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "field": "id",
                      "error": "field id is a read only field"
                    },
                    {
                      "field": "travel_address",
                      "error": "field travel address is a read only field"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Account",
        "description": "Delete an account with the specified ID.",
        "operationId": "deleteAccount",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "permissions": [
              "accounts:manage"
            ]
          }
        ],
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "description": "The ID of the account to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "UUID"
            },
            "example": "01J6DJ9F691CF8E9H0V3ET0M0E"
          }
        ],
        "responses": {
          "200": {
            "description": "Account Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reply"
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized to Delete Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "this endpoint requires authentication"
                }
              }
            }
          },
          "404": {
            "description": "Account Not Found (Cannot Delete)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorReply"
                },
                "example": {
                  "success": false,
                  "error": "account not found"
                }
              }
            }
          }
        }
      }
    }
  }
}